{"version":3,"sources":["module.js","services/AppState.service.js","services/Auth.service.js","services/Backend.service.js","services/Guns.service.js","services/Notify.service.js","services/Tirs.service.js","services/Util.service.js","modules/app-bar/appBar.directive.js","modules/guns/gunList.directive.js","modules/guns/gunListItem.directive.js","modules/guns/gunTile.directive.js","modules/guns/gunTiles.directive.js","modules/home/homeController.js","modules/login/loginController.js","modules/main-menu/mainMenu.directive.js","modules/main-toolbar/MainToolbarController.js","modules/spinner/spinner.directive.js"],"names":[],"mappings":"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","file":"dist/javascripts/app.js","sourcesContent":["(function () {\n    'use strict';\n\n    angular.module('templates', []);\n\n    angular.module('application', [\n        'ngRoute',\n        'ui.router',\n        //'ui.bootstrap',\n        //'ngAnimate',\n        //'ngMaterial',\n        //'treasure-overlay-spinner',\n        'templates'\n    ])\n        .config(config)\n        .run(run);\n    /*.controller(function () {\n\n     });*/\n\n\n    function config($stateProvider, $urlRouterProvider) {\n\n        //$mdIconProvider\n        //  //.iconSet('social', 'img/icons/sets/social-icons.svg', 24)\n        //  .iconSet('social', './bower_components/angular-material/demos/icon/demoSvgIconSets/assets/core-icons.svg', 24)\n        //  .defaultIconSet('./bower_components/angular-material/demos/icon/demoSvgIconSets/assets/core-icons.svg', 24);\n\n        //$mdThemingProvider.theme('success');\n        //$mdThemingProvider.theme('error');\n\n\n        $urlRouterProvider.otherwise('/');\n\n        $stateProvider\n            .state('home', {\n                url: '/', templateUrl: 'modules/home/tpl/home.view.html',\n                controller: 'HomeController',\n                controllerAs: 'vm',\n                access: {\n                    loginRequired: true\n                }\n            })\n            .state('login', {\n                url: '/login?from', templateUrl: 'modules/login/tpl/login.view.html',\n                controller: 'LoginController',\n                controllerAs: 'vm'\n            })\n        ;\n\n\n        // attach http interceptor\n        //$httpProvider.interceptors.push(['$q', function($q) {\n        //    return {\n        //        response: function(response) {\n        //            console.log(response);\n        //\n        //            // response.status === 200\n        //            return response || $q.when(response);\n        //        },\n        //        responseError: function(rejection) {\n        //            // Executed only when the XHR response\n        //            // has an error status code\n        //\n        //            console.log(rejection);\n        //\n        //            if (rejection.status == 401) {\n        //\n        //                // The interceptor \"blocks\" the error;\n        //                // and the success callback will be executed.\n        //\n        //                rejection.data = {stauts: 401, descr: 'unauthorized'};\n        //                return rejection.data;\n        //            }\n        //\n        //            // $q.reject creates a promise that is resolved as\n        //            // rejected with the specified reason.\n        //            // In this case the error callback will be executed.\n        //\n        //            return $q.reject(rejection);\n        //        }\n        //    }\n        //}]);\n\n        //$locationProvider.html5Mode(true);\n    }\n\n    function run($rootScope, $state, $stateParams, Util, Auth) {\n\n        /**\n         * Init Backendless\n         */\n        (function () {\n            var APPLICATION_ID = 'D2B53F5F-CED5-27D8-FFCE-93A8FB63E000',\n                SECRET_KEY = '82714740-213B-F349-FF36-B80FFE6C5300',\n                VERSION = 'v1'; //default application version;\n\n            Backendless.initApp(APPLICATION_ID, SECRET_KEY, VERSION);\n        })();\n\n\n        $rootScope.$state = $state;\n        $rootScope.$stateParams = $stateParams;\n\n\n        $rootScope.$on('$stateChangeStart', function (event, toState, toParams, fromState, fromParams) {\n            console.log('$stateChangeStart', toState);\n\n            var access = Util.getStateInheritedAccessRules(toState);\n\n            if (access.loginRequired && !Auth.isLoggedIn()) {\n                event.preventDefault();\n\n                Auth.showLogin({from: Util.encodeState(toState, toParams)});\n            }\n        });\n    }\n\n\n})();","(function (module) {\n\n  module.service('AppState', function () {\n\n    var state = {\n      draftSession: false,\n      sessions: []\n    };\n\n\n    // Implementations\n\n    function Session(options) {\n      _.assign(this, {\n        draft: true\n      }, options);\n\n      return this;\n    }\n\n    function newSession(options) {\n      var session = new Session(options);\n\n      state.sessions.push(session);\n\n      state.draftSession = session;\n\n      return session;\n    }\n\n    function cancelSession(session) {\n      var sessionIndex = _.findIndex(state.sessions, session);\n\n      if (sessionIndex >= 0) {\n        state.sessions.splice(sessionIndex, 1);\n      }\n\n      if (state.draftSession === session) {\n        getDraftSession();\n      }\n    }\n\n    function getDraftSession() {\n      return state.draftSession = _.find(state.sessions, 'draft');\n    }\n\n\n    // Export\n\n    return {\n      state: state,\n\n      Session: Session,\n      newSession: newSession,\n      cancelSession: cancelSession,\n      getDraftSession: getDraftSession\n    };\n  });\n\n})(angular.module('application'));\n","/**\n * Created by YuraVika on 13.08.2015.\n */\n\n(function (module) {\n\n  module.service('Auth', function ($rootScope, $q, $state, Notify, Backend) {\n\n    var state = {\n      user: null\n    };\n\n\n    // Implementations\n\n    function login(userCredentials) {\n      var promise = Backend.call('UserService.login', userCredentials.email, userCredentials.password, true);\n\n      promise.then(function (user) {\n        console.info('login', user);\n\n        Notify.show({\n          template: 'Добро пожаловать, <%- data.name %>!',\n          type: 'success',\n          data: user\n        });\n      });\n\n      return promise;\n    }\n\n    function logout() {\n      var promise = isLoggedIn() ? Backend.call('UserService.logout') : $q.when(true);\n\n      $rootScope.$emit('spinner', true);\n\n      promise\n        .then(function () {\n          console.info('logout');\n\n          state.user = null;\n\n          $state.go('login');\n        })\n        .finally(function () {\n          $rootScope.$emit('spinner', false);\n        });\n\n      return promise;\n    }\n\n    function userTokenIsValid() {\n      var success = function (data) {\n        console.log('userTokenIsValid', data);\n      };\n      var error = function (data) {\n        console.log('error', data);\n      };\n\n      Backendless.UserService.isValidLogin(new Backendless.Async(success, error));\n    }\n\n    function isLoggedIn() {\n      var user = state.user = state.user || Backendless.LocalCache.get('current-user');\n\n      return !!user;\n    }\n\n    function showLogin(params) {\n      $state.go('login', params);\n    }\n\n\n    // Export\n\n    return {\n      state: state,\n\n      login: login,\n      logout: logout,\n      isLoggedIn: isLoggedIn,\n      showLogin: showLogin\n    };\n  });\n\n})(angular.module('application'));\n","(function (module) {\n\n    module.service('Backend', function ($q, $injector, $state, Notify) {\n\n        // Implementations\n\n        function call(/*[context,] methodName, arguments...*/) {\n            var args = _.slice(arguments);\n            var methodName = args.shift();\n            var methodFunc = methodName ? _.get(Backendless, methodName) : Backendless;\n            var methodNameParts = methodName ? methodName.split('.') : [];\n            var context = methodNameParts.length > 1 ? _.get(Backendless, _.initial(methodNameParts).join('.')) : Backendless;\n\n            return $q(function (resolve, reject) {\n                var async = new Backendless.Async(\n                    function (response) {\n                        resolve(response);\n                    },\n                    function (error) {\n                        console.warn(methodName + ' error', error);\n\n                        reject(error);\n\n                        Notify.show({\n                            template: '[<%- data.code %>] <%- data.message %>',\n                            type: 'error',\n                            data: error\n                        });\n\n                        if (error.code === 3064) {\n                            var Auth = $injector.get('Auth');\n\n                            Auth.logout();\n                        }\n                    }\n                );\n\n                args.push(async);\n\n                methodFunc.apply(context, args);\n            });\n        }\n\n\n        // Export\n\n        return {\n            call: call\n        };\n    });\n\n})(angular.module('application'));\n","(function (module) {\n\n  module.service('Guns', function ($q) {\n\n    var state = {\n      guns: null\n    };\n\n    var guns = [\n      {\n        name: 'g1',\n        title: 'G1',\n        image: 'gun-1.jpg'\n      },\n      {\n        name: 'g2',\n        title: 'G2',\n        image: 'gun-2.jpg'\n      },\n      {\n        name: 'g3',\n        title: 'G3',\n        image: 'gun-3.jpg'\n      },\n      {\n        name: 'g4',\n        title: 'G4',\n        image: 'gun-4.jpg'\n      },\n      {\n        name: 'g5',\n        title: 'G5',\n        image: 'gun-5.jpg'\n      },\n      {\n        name: 'g6',\n        title: 'G6',\n        image: 'gun-6.jpg'\n      },\n      {\n        name: 'g7',\n        title: 'G7',\n        image: 'gun-7.jpg'\n      }\n    ];\n\n\n    // Implementations\n\n    function getGuns() {\n      return $q(function (resolve, reject) {\n        resolve(guns);\n      });\n    }\n\n\n    // Export\n\n    return {\n      state: state,\n\n      getGuns: getGuns\n    };\n  });\n\n})(angular.module('application'));\n","(function (module) {\n\n    module.service('Notify', function (/*$mdToast*/) {\n\n\n        // Implementations\n\n        function show(params) {\n            var messageContent = params.template ? _.template(params.template)({data: params.data}) : params.content;\n            var delay = params.delay || 10000;\n            /*var toast = $mdToast.simple()\n              .content(messageContent)\n              .position('top right')\n              .hideDelay(delay);\n\n            if (params.type) {\n                toast.theme(params.type);\n            }\n\n            $mdToast.show(toast);*/\n\n            console.log(messageContent);\n        }\n\n\n        // Export\n\n        return {\n            show: show\n        };\n    });\n\n})(angular.module('application'));\n","(function (module) {\n\n    module.service('Tirs', function ($q, Notify) {\n\n        var state = {\n            tir: null,\n            tirs: null\n        };\n\n\n        // Implementations\n\n        var Classes = {\n            Tirs: function Tirs(args) {\n                args = args || {};\n                this._private_relations = [];\n                this._private_geoRelations = [];\n                this._private_dates = [\n                    \"created\",\n                    \"updated\"];\n                this.___class = \"Tirs\";\n\n                this.ownerId = args.ownerId || String(Math.abs(Math.floor(Math.random() * Math.pow(10, 500) - 1)));\n\n                this.created = args.created || new Date();\n\n                this.updated = args.updated || new Date();\n\n                this.title = args.title || String(Math.abs(Math.floor(Math.random() * Math.pow(10, 500) - 1)));\n\n                this.name = args.name || String(Math.abs(Math.floor(Math.random() * Math.pow(10, 500) - 1)));\n\n                var storage = Backendless.Persistence.of(Tirs);\n\n                this.save = function (async) {\n                    delete this._private_relations;\n                    delete this._private_geoRelations;\n                    delete this._private_dates;\n                    storage.save(this, async);\n                };\n\n                this.remove = function (async) {\n                    var result = storage.remove(this, async);\n                    this.objectId = null;\n                    return result;\n                };\n\n            }\n        };\n\n\n        function getTirs() {\n            return $q(function (resolve, reject) {\n                var success = function (response) {\n                    console.info('getTirs', response);\n\n                    state.tirs = response.data;\n\n                    resolve(state.tirs);\n                };\n                var error = function (error) {\n                    console.warn('getTirs error', error);\n\n                    reject(error);\n\n                    Notify.show({\n                        template: '[<%- data.code %>] <%- data.message %>',\n                        type: 'error',\n                        data: error\n                    });\n                };\n\n                if (state.tirs) {\n                    resolve(state.tirs);\n                }\n                else {\n                    Backendless.Persistence.of( Classes.Tirs ).find( new Backendless.Async(success, error) );\n                }\n            });\n        }\n\n\n        // Export\n\n        return {\n            Classes: Classes,\n            state: state,\n\n            getTirs: getTirs\n        };\n    });\n\n})(angular.module('application'));\n","(function (module) {\n\n    module.service('Util', function ($injector) {\n\n\n        // Implementations\n\n        function getStateInheritedAccessRules(state) {\n            var $state = $injector.get('$state');\n\n            state = state || $state.current;\n\n            var meta = _.transform(state.name.split('.'), function (meta, stateNamePart) {\n                meta.stateName = (meta.stateName ? meta.stateName + '.' : '') + stateNamePart;\n\n                var state = $state.get(meta.stateName);\n                var access = state && state.access;\n\n                access && _.assign(meta.access, access);\n            }, {\n                stateName: '',\n                access: {}\n            });\n\n            return meta.access;\n        }\n\n        /**\n         * Converts current state and it's parameters to the such string: @games_slug.rewards?slug=smoke-arcanoid\n         * @returns {string}\n         */\n        function encodeState(state, stateParams) {\n            if (!state) {\n                var $state = $injector.get('$state');\n\n                state = $state.current;\n                stateParams = $state.params;\n            }\n\n            var encodedState = '@' + state.name;\n\n            var query = _(stateParams)\n              .omit(_.isUndefined)\n              .map(function (value, key) {\n                  return encodeURIComponent(key) + '=' + encodeURIComponent(value);\n              })\n              .join('&');\n\n            if (query) {\n                encodedState = encodedState + '?' + query;\n            }\n\n            return encodedState;\n        }\n\n        /**\n         * Decodes state and state parameters from the string like @games_slug.rewards?slug=smoke-arcanoid\n         * @param {string} encodedState\n         * @returns {Object|null}\n         */\n        function decodeState(encodedState) {\n            var $state = $injector.get('$state');\n            var stateInfo = null;\n\n            if (encodedState) {\n\n                if (_.startsWith(encodedState, '@')) {\n                    var elements = encodedState.split('?');\n                    var stateName = _.trimLeft(elements.shift(), '@');\n                    var state = $state.get(stateName);\n\n                    if (state) {\n                        var params = elements.length && _(elements[0].split('&'))\n                            .map(function (queryParam) {\n                                return queryParam.split('=');\n                            })\n                            .zipObject()\n                            .value() || {};\n\n                        stateInfo = {\n                            state: state,\n                            params: params\n                        };\n                    }\n                }\n            }\n\n            return stateInfo;\n        }\n\n        function serializeQueryParams(params) {\n            var result = '';\n\n            if (_.isObject(params)) {\n                params = _.pick(params, angular.isDefined);\n\n                result = $.param(params);\n\n                if (result) {\n                    result = '?' + result;\n                }\n            }\n\n            return result;\n        }\n\n\n\n        // Export\n\n        return {\n            getStateInheritedAccessRules: getStateInheritedAccessRules,\n\n            encodeState: encodeState,\n            decodeState: decodeState,\n\n            serializeQueryParams: serializeQueryParams\n        };\n    });\n\n})(angular.module('application'));\n","/**\n * Created by Yury.Sergunin on 27.08.2015.\n */\n\n(function (module) {\n\n  module.directive('appBar', function () {\n    return {\n      templateUrl: 'modules/app-bar/tpl/app-bar.view.html',\n      scope: {},\n      controller: function ($scope, Auth) {\n\n        // Pass fields to the $scope\n        _.assign($scope, {\n\n        });\n\n        // Pass methods to the $scope\n        _.assign($scope, {\n          isLoggedIn: Auth.isLoggedIn,\n          logout: logout\n        });\n\n\n        // Implementations\n\n        function logout() {\n          Auth.logout();\n        }\n      }\n    };\n  });\n\n})(angular.module('application'));\n","/**\n * Created by Yury.Sergunin on 28.08.2015.\n */\n\n(function (module) {\n\n  module.directive('gunList', function () {\n    return {\n      templateUrl: 'modules/guns/tpl/gun-list.view.html',\n      scope: {},\n      controller: function ($scope, Guns) {\n\n        // Pass fields to the $scope\n        _.assign($scope, {\n          guns: null\n        });\n\n        // Pass methods to the $scope\n        _.assign($scope, {\n\n        });\n\n\n        // Initialize\n\n        fetchGuns();\n\n\n        // Implementations\n\n        function fetchGuns() {\n          Guns.getGuns()\n            .then(function (guns) {\n              $scope.guns = guns;\n            });\n        }\n\n      }\n    };\n  });\n\n})(angular.module('application'));\n","/**\n * Created by Yury.Sergunin on 28.08.2015.\n */\n\n(function (module) {\n\n  module.directive('gunListItem', function () {\n    return {\n      templateUrl: 'modules/guns/tpl/gun-list-item.view.html',\n      scope: {\n        gun: '=gunListItem'\n      },\n      controller: function ($scope, Guns) {\n\n        // Pass fields to the $scope\n        _.assign($scope, {\n\n        });\n\n        // Pass methods to the $scope\n        _.assign($scope, {\n\n        });\n\n\n        // Initialize\n\n\n        // Implementations\n\n      }\n    };\n  });\n\n})(angular.module('application'));\n","/**\n * Created by Yury.Sergunin on 28.08.2015.\n */\n\n(function (module) {\n\n  module.directive('gunTile', function () {\n    return {\n      templateUrl: 'modules/guns/tpl/gun-tile.view.html',\n      scope: {\n        gun: '=gunTile'\n      },\n      controller: function ($scope, Guns) {\n\n        // Pass fields to the $scope\n        _.assign($scope, {\n\n        });\n\n        // Pass methods to the $scope\n        _.assign($scope, {\n\n        });\n\n\n        // Initialize\n\n\n        // Implementations\n\n      }\n    };\n  });\n\n})(angular.module('application'));\n","/**\n * Created by Yury.Sergunin on 28.08.2015.\n */\n\n(function (module) {\n\n  module.directive('gunTiles', function () {\n    return {\n      templateUrl: 'modules/guns/tpl/gun-tiles.view.html',\n      scope: {},\n      controller: function ($scope, Guns) {\n\n        // Pass fields to the $scope\n        _.assign($scope, {\n          guns: null\n        });\n\n        // Pass methods to the $scope\n        _.assign($scope, {\n\n        });\n\n\n        // Initialize\n\n        fetchGuns();\n\n\n        // Implementations\n\n        function fetchGuns() {\n          Guns.getGuns()\n            .then(function (guns) {\n              $scope.guns = guns;\n            });\n        }\n\n      }\n    };\n  });\n\n})(angular.module('application'));\n","(function (module) {\n  'use strict';\n\n  module.controller('HomeController', HomeController);\n\n  function HomeController() {\n    var vm = this;\n\n\n    // Pass fields to the View\n    _.assign(vm, {\n      spinner: {\n        active: false\n      }\n    });\n\n\n    // Pass methods to the View\n    _.assign(vm, {});\n\n\n    // Implementations\n\n\n  }\n\n})(angular.module('application'));","(function (module) {\n  'use strict';\n\n  module.controller('LoginController', LoginController);\n\n  function LoginController($rootScope, $state, Auth, Util, Tirs) {\n    var vm = this;\n\n\n    var userCredentials = {\n      email: 'user1@mail.com',\n      password: '123456789'\n    };\n\n    var logoutPromise = Auth.logout();\n\n\n    // Pass fields to the View\n    _.assign(vm, {\n      userCredentials: userCredentials,\n      tirsState: Tirs.state\n    });\n\n\n    // Pass methods to the View\n    _.assign(vm, {\n      login: login\n    });\n\n\n    // Initialize\n\n    (function () {\n      $rootScope.$emit('spinner', true);\n\n      logoutPromise.then(function () {\n        return Tirs.getTirs()\n          .then(function (tirs) {\n            Tirs.state.tir = Tirs.state.tir || tirs[0];\n          });\n      })\n        .finally(function () {\n          $rootScope.$emit('spinner', false);\n        });\n    })();\n\n\n    // Implementations\n\n    function login() {\n      $rootScope.$emit('spinner', true);\n\n      console.log('auth');\n\n      Auth.login(vm.userCredentials)\n        .then(function pass() {\n          var originalPageInfo = Util.decodeState($state.params.from);\n\n          if (originalPageInfo) {\n            $state.go(originalPageInfo.state.name, originalPageInfo.params, {reload: true});\n          }\n          else {\n            $state.go('home');\n          }\n        })\n        .finally(function () {\n          $rootScope.$emit('spinner', false);\n        });\n    }\n\n  }\n\n})(angular.module('application'));","/**\n * Created by YuraVika on 16.08.2015.\n */\n\n(function (module) {\n\n    module.directive('mainMenu', function () {\n        return {\n            templateUrl: 'modules/main-menu/tpl/main-menu.view.html',\n            scope: {},\n            controller: function ($scope, $element, $rootScope, Auth) {\n\n                // Pass fields to the $scope\n                _.assign($scope, {\n\n                });\n\n                // Pass methods to the $scope\n                _.assign($scope, {\n                    toggle: toggle,\n                    logout: logout\n                });\n\n\n                // Implementations\n\n                function toggle(state) {\n                    /*var mdSidenav = $mdSidenav('main-menu');\n\n                    state = _.isUndefined(state) ? !mdSidenav.isOpen() : !!state;\n\n                    var method = state ? 'open' : 'close';\n\n                    mdSidenav[method]();*/\n                }\n\n                function logout() {\n                    Auth.logout().then(function () {\n                        toggle(false);\n                    });\n                }\n\n\n                // Watchers\n\n                $rootScope.$on('mainMenu.toggle', function (event, state) {\n                    toggle(state);\n                });\n            }\n        };\n    });\n\n})(angular.module('application'));\n","/**\r\n * Created by YuraVika on 16.08.2015.\r\n */\r\n\r\n(function (module) {\r\n\r\n    module.controller('MainToolbarController', function ($rootScope) {\r\n        var vm = this;\r\n\r\n        _.assign(vm, {\r\n           toggleMainMenu:  toggleMainMenu\r\n        });\r\n\r\n\r\n        // Implementations\r\n\r\n        function toggleMainMenu(state) {\r\n            $rootScope.$emit('mainMenu.toggle', state);\r\n        }\r\n\r\n    });\r\n\r\n\r\n})(angular.module('application'));","/**\n * Created by Yury.Sergunin on 28.08.2015.\n */\n\n(function (module) {\n\n  module.directive('spinner', function () {\n    return {\n      scope: {\n        isActive: '=?spinner'\n      },\n      controller: function ($scope, $rootScope) {\n\n        var options = {\n          overlay: {\n            keyboard: false, // teardown when <esc> key is pressed (default: true)\n            static: true, // maintain overlay when clicked (default: false)\n            onclose: function() { // execute function when overlay is closed\n              overlay = null;\n              toggle(false);\n            }\n          }\n        };\n\n        var overlay = null;\n\n        // Pass fields to the $scope\n        _.assign($scope, {\n\n        });\n\n        // Pass methods to the $scope\n        _.assign($scope, {\n\n        });\n\n\n        // Implementations\n\n        function toggle(state) {\n          if (state) {\n            var $spinner = $(\n              '<svg class=\"spinner\" width=\"65px\" height=\"65px\" viewBox=\"0 0 66 66\" xmlns=\"http://www.w3.org/2000/svg\">' +\n              '   <circle class=\"path\" fill=\"none\" stroke-width=\"6\" stroke-linecap=\"round\" cx=\"33\" cy=\"33\" r=\"30\"></circle>' +\n              '</svg>'\n            );\n\n            $spinner.appendTo(document.body);\n\n            overlay = mui.overlay('on', options.overlay, $spinner[0]);\n\n            $(overlay).addClass('spinner-overlay');\n          }\n          else if (overlay) {\n            mui.overlay('off');\n            overlay = null;\n          }\n\n          $scope.isActive = !!state;\n        }\n\n\n        // Watchers\n\n        $scope.$watch('isActive', function () {\n          toggle($scope.isActive);\n        });\n\n        (function () {\n          if (_.isUndefined($scope.isActive)) {\n            console.log('set on');\n\n            var off = $rootScope.$on('spinner', function (event, state) {\n              console.trace('on', state);\n\n              $scope.isActive = !!state;\n            });\n\n            $scope.$on('$destroy', function () {\n              console.log('set off');\n\n              off();\n            });\n          }\n        })();\n\n      }\n    };\n  });\n\n})(angular.module('application'));\n"],"sourceRoot":"/source/"}