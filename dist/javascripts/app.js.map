{"version":3,"sources":["module.js","services/Auth.service.js","services/Backend.service.js","services/Notify.service.js","services/Tirs.service.js","services/Util.service.js","modules/home/homeController.js","modules/login/loginController.js","modules/shootSession/directives/shootSessionListDirective.js","modules/shootSession/services/ShootSessionsService.js"],"names":[],"mappings":"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","file":"dist/javascripts/app.js","sourcesContent":["(function () {\n    'use strict';\n\n    angular.module('templates', []);\n\n    angular.module('application', [\n        'ngRoute',\n        'ui.router',\n        //'ui.bootstrap',\n        //'ngAnimate',\n        'ngMaterial',\n        'treasure-overlay-spinner',\n        'templates'\n    ])\n        .config(config)\n        .run(run);\n    /*.controller(function () {\n\n     });*/\n\n\n    function config($stateProvider, $httpProvider, $locationProvider, $urlRouterProvider, $mdIconProvider, $mdThemingProvider) {\n\n        $mdIconProvider\n          //.iconSet('social', 'img/icons/sets/social-icons.svg', 24)\n          .iconSet('social', './bower_components/angular-material/demos/icon/demoSvgIconSets/assets/core-icons.svg', 24)\n          .defaultIconSet('./bower_components/angular-material/demos/icon/demoSvgIconSets/assets/core-icons.svg', 24);\n\n        $mdThemingProvider.theme('success');\n        $mdThemingProvider.theme('error');\n\n\n        $urlRouterProvider.otherwise('/notfound');\n\n        $stateProvider\n          .state('home', {\n              url: '/', templateUrl: 'modules/home/templates/home.view.html',\n              controller: 'HomeController',\n              controllerAs: 'vm',\n              access: {\n                  loginRequired: true\n              }\n          })\n          .state('login', {\n              url: '/login?from', templateUrl: 'modules/login/templates/login.view.html',\n              controller: 'LoginController',\n              controllerAs: 'vm'\n          })\n        ;\n\n\n        // attach http interceptor\n        //$httpProvider.interceptors.push(['$q', function($q) {\n        //    return {\n        //        response: function(response) {\n        //            console.log(response);\n        //\n        //            // response.status === 200\n        //            return response || $q.when(response);\n        //        },\n        //        responseError: function(rejection) {\n        //            // Executed only when the XHR response\n        //            // has an error status code\n        //\n        //            console.log(rejection);\n        //\n        //            if (rejection.status == 401) {\n        //\n        //                // The interceptor \"blocks\" the error;\n        //                // and the success callback will be executed.\n        //\n        //                rejection.data = {stauts: 401, descr: 'unauthorized'};\n        //                return rejection.data;\n        //            }\n        //\n        //            // $q.reject creates a promise that is resolved as\n        //            // rejected with the specified reason.\n        //            // In this case the error callback will be executed.\n        //\n        //            return $q.reject(rejection);\n        //        }\n        //    }\n        //}]);\n\n        //$locationProvider.html5Mode(true);\n    }\n\n    function run($rootScope, $state, $stateParams, Util, Auth) {\n\n        /**\n         * Init Backendless\n         */\n        (function () {\n            var APPLICATION_ID = 'D2B53F5F-CED5-27D8-FFCE-93A8FB63E000',\n                SECRET_KEY = '82714740-213B-F349-FF36-B80FFE6C5300',\n                VERSION = 'v1'; //default application version;\n\n            Backendless.initApp(APPLICATION_ID, SECRET_KEY, VERSION);\n        })();\n\n\n        $rootScope.$state = $state;\n        $rootScope.$stateParams = $stateParams;\n\n\n        $rootScope.$on('$stateChangeStart', function (event, toState, toParams, fromState, fromParams) {\n            console.log('$stateChangeStart', toState);\n\n            var access = Util.getStateInheritedAccessRules(toState);\n\n            if (access.loginRequired && !Auth.isLoggedIn()) {\n                event.preventDefault();\n\n                Auth.showLogin({from: Util.encodeState(toState, toParams)});\n            }\n        });\n    }\n\n\n})();","/**\n * Created by YuraVika on 13.08.2015.\n */\n\n(function (module) {\n\n    module.service('Auth', function ($q, $state, Notify, Backend) {\n\n        var state = {\n            user: null\n        };\n\n\n        // Implementations\n\n        function login(userCredentials) {\n            var promise = Backend.call('UserService.login', userCredentials.email, userCredentials.password, true);\n\n            promise.then(function (user) {\n                console.info('login', user);\n\n                Notify.show({\n                    template: 'Добро пожаловать, <%- data.name %>!',\n                    type: 'success',\n                    data: user\n                });\n            });\n\n            return promise;\n        }\n\n        function logout() {\n            var promise = Backend.call('UserService.logout');\n\n            promise.then(function () {\n                console.info('logout');\n\n                $state.go('login');\n            });\n\n            return promise;\n        }\n\n        function userTokenIsValid() {\n            var success = function (data) {\n                console.log('userTokenIsValid', data);\n            };\n            var error = function (data) {\n                console.log('error', data);\n            };\n\n            Backendless.UserService.isValidLogin(new Backendless.Async(success, error));\n        }\n\n        function isLoggedIn() {\n            var user = state.user = state.user || Backendless.LocalCache.get('current-user');\n\n            return !!user;\n        }\n\n        function showLogin(params) {\n            $state.go('login', params);\n        }\n\n\n\n        // Export\n\n        return {\n            state: state,\n\n            login: login,\n            logout: logout,\n            isLoggedIn: isLoggedIn,\n            showLogin: showLogin\n        };\n    });\n\n})(angular.module('application'));\n","(function (module) {\n\n    module.service('Backend', function ($q, $injector, $state, Notify) {\n\n        // Implementations\n\n        function call(/*[context,] methodName, arguments...*/) {\n            var args = _.slice(arguments);\n            var methodName = args.shift();\n            var methodFunc = methodName ? _.get(Backendless, methodName) : Backendless;\n            var methodNameParts = methodName ? methodName.split('.') : [];\n            var context = methodNameParts.length > 1 ? _.get(Backendless, _.initial(methodNameParts).join('.')) : Backendless;\n\n            return $q(function (resolve, reject) {\n                var async = new Backendless.Async(\n                    function (response) {\n                        resolve(response);\n                    },\n                    function (error) {\n                        console.warn(methodName + ' error', error);\n\n                        reject(error);\n\n                        Notify.show({\n                            template: '[<%- data.code %>] <%- data.message %>',\n                            type: 'error',\n                            data: error\n                        });\n\n                        if (error.code === 3064) {\n                            var Auth = $injector.get('Auth');\n\n                            Auth.logout();\n                        }\n                    }\n                );\n\n                args.push(async);\n\n                methodFunc.apply(context, args);\n            });\n        }\n\n\n        // Export\n\n        return {\n            call: call\n        };\n    });\n\n})(angular.module('application'));\n","(function (module) {\n\n    module.service('Notify', function ($mdToast) {\n\n\n        // Implementations\n\n        function show(params) {\n            var messageContent = params.template ? _.template(params.template)({data: params.data}) : params.content;\n            var delay = params.delay || 10000;\n            var toast = $mdToast.simple()\n              .content(messageContent)\n              .position('top right')\n              .hideDelay(delay);\n\n            if (params.type) {\n                toast.theme(params.type);\n            }\n\n            $mdToast.show(toast);\n        }\n\n\n        // Export\n\n        return {\n            show: show\n        };\n    });\n\n})(angular.module('application'));\n","(function (module) {\n\n    module.service('Tirs', function ($q, Notify, Backend) {\n\n        var state = {\n            tir: null,\n            tirs: null\n        };\n\n\n        // Implementations\n\n        var Classes = {\n            Tirs: function Tirs(args) {\n                args = args || {};\n                this._private_relations = [];\n                this._private_geoRelations = [];\n                this._private_dates = [\n                    \"created\",\n                    \"updated\"];\n                this.___class = \"Tirs\";\n\n                this.ownerId = args.ownerId || String(Math.abs(Math.floor(Math.random() * Math.pow(10, 500) - 1)));\n\n                this.created = args.created || new Date();\n\n                this.updated = args.updated || new Date();\n\n                this.title = args.title || String(Math.abs(Math.floor(Math.random() * Math.pow(10, 500) - 1)));\n\n                this.name = args.name || String(Math.abs(Math.floor(Math.random() * Math.pow(10, 500) - 1)));\n\n                var storage = Backendless.Persistence.of(Tirs);\n\n                this.save = function (async) {\n                    delete this._private_relations;\n                    delete this._private_geoRelations;\n                    delete this._private_dates;\n                    storage.save(this, async);\n                };\n\n                this.remove = function (async) {\n                    var result = storage.remove(this, async);\n                    this.objectId = null;\n                    return result;\n                };\n\n            }\n        };\n\n\n        function getTirs() {\n            return $q(function (resolve, reject) {\n                var success = function (response) {\n                    console.info('getTirs', response);\n\n                    state.tirs = response.data;\n\n                    resolve(state.tirs);\n                };\n                var error = function (error) {\n                    console.warn('getTirs error', error);\n\n                    reject(error);\n\n                    Notify.show({\n                        template: '[<%- data.code %>] <%- data.message %>',\n                        type: 'error',\n                        data: error\n                    });\n                };\n\n                if (state.tirs) {\n                    resolve(state.tirs);\n                }\n                else {\n                    Backendless.Persistence.of( Classes.Tirs ).find( new Backendless.Async(success, error) );\n                }\n            });\n\n            /*var promise = Backend.call('Backendless.Persistence.of', Classes.Tirs);\n\n            promise.then(function (user) {\n                console.info('login', user);\n\n                Notify.show({\n                    template: 'Добро пожаловать, <%- data.name %>!',\n                    type: 'success',\n                    data: user\n                });\n            });\n\n            return promise;*/\n\n        }\n\n\n        // Export\n\n        return {\n            Classes: Classes,\n            state: state,\n\n            getTirs: getTirs\n        };\n    });\n\n})(angular.module('application'));\n","(function (module) {\n\n    module.service('Util', function ($injector) {\n\n\n        // Implementations\n\n        function getStateInheritedAccessRules(state) {\n            var $state = $injector.get('$state');\n\n            state = state || $state.current;\n\n            var meta = _.transform(state.name.split('.'), function (meta, stateNamePart) {\n                meta.stateName = (meta.stateName ? meta.stateName + '.' : '') + stateNamePart;\n\n                var state = $state.get(meta.stateName);\n                var access = state && state.access;\n\n                access && _.assign(meta.access, access);\n            }, {\n                stateName: '',\n                access: {}\n            });\n\n            return meta.access;\n        }\n\n        /**\n         * Converts current state and it's parameters to the such string: @games_slug.rewards?slug=smoke-arcanoid\n         * @returns {string}\n         */\n        function encodeState(state, stateParams) {\n            if (!state) {\n                var $state = $injector.get('$state');\n\n                state = $state.current;\n                stateParams = $state.params;\n            }\n\n            var encodedState = '@' + state.name;\n\n            var query = _(stateParams)\n              .omit(_.isUndefined)\n              .map(function (value, key) {\n                  return encodeURIComponent(key) + '=' + encodeURIComponent(value);\n              })\n              .join('&');\n\n            if (query) {\n                encodedState = encodedState + '?' + query;\n            }\n\n            return encodedState;\n        }\n\n        /**\n         * Decodes state and state parameters from the string like @games_slug.rewards?slug=smoke-arcanoid\n         * @param {string} encodedState\n         * @returns {Object|null}\n         */\n        function decodeState(encodedState) {\n            var $state = $injector.get('$state');\n            var stateInfo = null;\n\n            if (encodedState) {\n\n                if (_.startsWith(encodedState, '@')) {\n                    var elements = encodedState.split('?');\n                    var stateName = _.trimLeft(elements.shift(), '@');\n                    var state = $state.get(stateName);\n\n                    if (state) {\n                        var params = elements.length && _(elements[0].split('&'))\n                            .map(function (queryParam) {\n                                return queryParam.split('=');\n                            })\n                            .zipObject()\n                            .value() || {};\n\n                        stateInfo = {\n                            state: state,\n                            params: params\n                        };\n                    }\n                }\n            }\n\n            return stateInfo;\n        }\n\n        function serializeQueryParams(params) {\n            var result = '';\n\n            if (_.isObject(params)) {\n                params = _.pick(params, angular.isDefined);\n\n                result = $.param(params);\n\n                if (result) {\n                    result = '?' + result;\n                }\n            }\n\n            return result;\n        }\n\n\n\n        // Export\n\n        return {\n            getStateInheritedAccessRules: getStateInheritedAccessRules,\n\n            encodeState: encodeState,\n            decodeState: decodeState,\n\n            serializeQueryParams: serializeQueryParams\n        };\n    });\n\n})(angular.module('application'));\n","(function (module) {\n    'use strict';\n\n    module.controller('HomeController', HomeController);\n\n    function HomeController() {\n        var vm = this;\n\n\n        // Pass fields to the View\n        _.assign(vm, {\n            spinner: {\n                active: false\n            }\n        });\n\n\n        // Pass methods to the View\n        _.assign(vm, {\n\n        });\n\n\n\n        // Implementations\n\n\n\n    }\n\n})(angular.module('application'));","(function (module) {\n    'use strict';\n\n    module.controller('LoginController', LoginController);\n\n    function LoginController($state, Auth, Util, Tirs) {\n        var vm = this;\n\n\n        var userCredentials = {\n            email: 'user1@mail.com',\n            password: '123456789'\n        };\n\n\n        // Pass fields to the View\n        _.assign(vm, {\n            userCredentials: userCredentials,\n            tirsState: Tirs.state,\n\n            spinner: {\n                active: false\n            }\n        });\n\n\n        // Pass methods to the View\n        _.assign(vm, {\n            login: login\n        });\n\n\n        // Initialize\n\n        (function () {\n            vm.spinner.active = true;\n\n            Tirs.getTirs()\n              .then(function (tirs) {\n                  Tirs.state.tir = Tirs.state.tir || tirs[0];\n              })\n              .finally(function () {\n                  vm.spinner.active = false;\n              });\n        })();\n\n\n        // Implementations\n\n        function login() {\n            vm.spinner.active = true;\n\n            console.log('auth');\n\n            Auth.login(vm.userCredentials)\n                .then(function pass() {\n                  var originalPageInfo = Util.decodeState($state.params.from);\n\n                  if (originalPageInfo) {\n                      $state.go(originalPageInfo.state.name, originalPageInfo.params, {reload: true});\n                  }\n                  else {\n                      $state.go('home');\n                  }\n                })\n                .finally(function () {\n                    vm.spinner.active = false;\n                });\n        }\n\n    }\n\n})(angular.module('application'));","(function (module) {\n\n    module.directive('shootSessionList', function () {\n        return {\n            scope: {},\n            controller: function ($scope, $element, ShootSessions) {\n                console.log(ShootSessions);\n\n\n            },\n            template: '<div>Hello!</div>'\n        };\n    });\n\n})(angular.module('application'));\n","(function (module) {\n\n    module.service('ShootSessions', function () {\n\n\n        var Classes = {\n            ShootSessions: function ShootSessions(args) {\n                args = args || {};\n                this._private_relations = [\n                    \"tir\",\n                    \"operator\"];\n                this._private_geoRelations = [];\n                this._private_dates = [\n                    \"startDate\",\n                    \"endDate\",\n                    \"created\",\n                    \"updated\"];\n                this.___class = \"ShootSessions\";\n\n                this.gun = args.gun || String(Math.abs(Math.floor(Math.random() * Math.pow(10, 256) - 1)));\n\n                this.startDate = args.startDate || new Date();\n\n                this.endDate = args.endDate || new Date();\n\n                this.shots = args.shots || Number(Math.abs(Math.floor(Math.random() * Math.pow(10, 5) - 1)));\n\n                this.price = args.price || Number(Math.abs(Math.floor(Math.random() * Math.pow(10, 5) - 1)));\n\n                this.ownerId = args.ownerId || String(Math.abs(Math.floor(Math.random() * Math.pow(10, 500) - 1)));\n\n                this.won = args.won || false;\n\n                this.duration = args.duration || Number(Math.abs(Math.floor(Math.random() * Math.pow(10, 5) - 1)));\n\n                this.hits = args.hits || Number(Math.abs(Math.floor(Math.random() * Math.pow(10, 5) - 1)));\n\n                this.created = args.created || new Date();\n\n                this.updated = args.updated || new Date();\n\n                this.tir = args.tir || null;\n\n                this.operator = args.operator || null;\n\n                var storage = Backendless.Persistence.of(ShootSessions);\n\n                this.save = function (async) {\n                    delete this._private_relations;\n                    delete this._private_geoRelations;\n                    delete this._private_dates;\n                    storage.save(this, async);\n                };\n\n                this.remove = function (async) {\n                    var result = storage.remove(this, async);\n                    this.objectId = null;\n                    return result;\n                };\n\n                this.getTir = function () {\n                    if (this.tir == null)\n                        storage.loadRelations(this, ['tir']);\n\n                    return this.tir;\n                };\n\n                this.getOperator = function () {\n                    if (this.operator == null)\n                        storage.loadRelations(this, ['operator']);\n\n                    return this.operator;\n                };\n\n            }\n        };\n\n\n        return {\n            Classes: Classes,\n\n            login: function () {\n                var userLoggedIn = function (user) {\n                    console.log('login', user);\n                };\n                var gotError = function (error) {\n                    console.log('login error', error);\n                };\n\n                Backendless.UserService.login('user1@mail.com', '123456789', false, new Backendless.Async(userLoggedIn, gotError));\n            }\n        };\n    });\n\n})(angular.module('application'));\n"],"sourceRoot":"/source/"}